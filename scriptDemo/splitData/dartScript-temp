import 'dart:io';

var rootDir = '';
var sourceDir = 'source-06-08';
void main(List<String> args) async {

  await _creatRootDir();

  Stream<FileSystemEntity> fileList = Directory(sourceDir).list();

  fileList.forEach((element) {
    _fmtFile(element);
  });

  return;
}

_creatRootDir() async {
  // 检查文件夹是否存在, 不存在则创建
  var currentDate = new DateTime.now();
  rootDir = "./" +
      currentDate.month.toString().padLeft(2, '0') +
      '-' +
      currentDate.day.toString().padLeft(2, '0');

  bool isExists = await Directory(rootDir).exists();

  if (!isExists) {
    Directory(rootDir).create();
  }
}

_fmtFile(FileSystemEntity fileEntity) async {
  String fileString = './' + fileEntity.path;

  File f = new File(fileString);

  var readFileName = fileString.split('/').last;

  var filePrefix = readFileName.substring(0, readFileName.length - 4);

  var user = '';

// 文件名前缀
  if (filePrefix.substring(2, 3) == 's') {
    user = 'su';
  } else if (filePrefix.substring(2, 3) == 'x') {
    user = 'xia';
  } else if (filePrefix.substring(2, 3) == 'w') {
    user = "wang";
  }

  String outputFileName = user + '-' + filePrefix.substring(0, 2).toLowerCase();
  if (filePrefix.length > 3) {
    outputFileName += '-lianxu.log';
  } else {
    outputFileName += '.log';
  }

  // String resultString = "./home_data/04-28/su-fn-15-1.csv";
  String resultString = rootDir + '/' + outputFileName;

  File resultFile = new File(resultString);

  try {
    List<String> s = f.readAsLinesSync();

    var element = '';
    s.forEach((data) {
      if (data.contains("(0x) 03-00-00-02-08-00-00-04-02")) {
        // print(data.substring(data.length-77,data.length));
        element = data.substring(data.length - 77, data.length);
      } else {
        return;
      }

      int x =
          returnXYZ(_hexToInt(element.split("-")[10] + element.split("-")[9]));
      int x1 =
          returnXYZ(_hexToInt(element.split("-")[16] + element.split("-")[15]));

      int y =
          returnXYZ(_hexToInt(element.split("-")[12] + element.split("-")[11]));
      int y1 =
          returnXYZ(_hexToInt(element.split("-")[18] + element.split("-")[17]));

      int z =
          returnXYZ(_hexToInt(element.split("-")[14] + element.split("-")[13]));
      int z1 =
          returnXYZ(_hexToInt(element.split("-")[20] + element.split("-")[19]));

      resultFile.writeAsStringSync("x:$x,y:$y,z:$z\n", mode: FileMode.append);
      resultFile.writeAsStringSync("x:$x1,y:$y1,z:$z1\n",
          mode: FileMode.append);
    });

    print("运行完毕");
  } catch (e) {
    print(e);
  }
}

int _hexToInt(String hex) {
  int val = 0;
  int len = hex.length;
  for (int i = 0; i < len; i++) {
    int hexDigit = hex.codeUnitAt(i);
    if (hexDigit >= 48 && hexDigit <= 57) {
      val += (hexDigit - 48) * (1 << (4 * (len - 1 - i)));
    } else if (hexDigit >= 65 && hexDigit <= 70) {
      // A..F
      val += (hexDigit - 55) * (1 << (4 * (len - 1 - i)));
    } else if (hexDigit >= 97 && hexDigit <= 102) {
      // a..f
      val += (hexDigit - 87) * (1 << (4 * (len - 1 - i)));
    } else {
      throw new FormatException("Invalid hexadecimal value");
    }
  }
  return val;
}

//转换为有符号的数据
int returnXYZ(value) {
  if (value <= 32767) {
    return value;
  } else {
    String temp = int.parse(value.toString(), radix: 10).toRadixString(2);
    var result = "";
    for (int i = 0; i < temp.length; i++) {
      String s = temp[i];
      if (s == '1') {
        result = result + "0";
      } else {
        result = result + "1";
      }
    }
    return -int.parse(int.parse(result, radix: 2).toRadixString(10));
  }
}
